{"ast":null,"code":"var _jsxFileName = \"/home/saviour/f5/phase-4-final-project/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = _ref => {\n  _s();\n  let {\n    onLogin\n  } = _ref;\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onLogin(data.token);\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Successfully login.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username or email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"username\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        className: \"form-control\",\n        id: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger mt-3\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Login","_ref","_s","onLogin","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","ok","token","message","error","onSubmit","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/saviour/f5/phase-4-final-project/src/components/Login.js"],"sourcesContent":["import { useState } from 'react';\n\nconst Login = ({ onLogin }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/users/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username, password }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        onLogin(data.token);\n      } else {\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      setErrorMessage('Successfully login.');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"username\">Username or email:</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"password\">Password:</label>\n        <input\n          type=\"password\"\n          className=\"form-control\"\n          id=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">Login</button>\n      {errorMessage && <div className=\"alert alert-danger mt-3\">{errorMessage}</div>}\n    </form>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}