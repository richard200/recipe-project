{"ast":null,"code":"var _jsxFileName = \"/home/saviour/f5/phase-4-final-project/src/Recipe/MyRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport Category from '../components/Category';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ViewRecipes() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const userId = sessionStorage.getItem('userId');\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch('/me');\n        let data = await response.json();\n        // console.log(recipes);\n        setRecipes(data.recipes);\n        console.log(recipes);\n        setIsLoading(false);\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false);\n      }\n    };\n    fetch('/categories').then(response => response.json()).then(data => setCategories(data.data));\n    fetchRecipes();\n  }, []);\n  const handleDelete = async recipeId => {\n    try {\n      const response = await fetch(`/recipes/${recipeId}`, {\n        method: 'DELETE'\n      });\n      if (response.ok) {\n        setRecipes(recipes.filter(recipe => recipe.id !== recipeId));\n      } else {\n        throw new Error('Failed to delete recipe');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // useEffect(() => {\n  //   fetch('/me')\n\n  //   .then(response => response.json())\n  //   .then(data => {\n  //       console.log(data.revipes)\n  //       if (data && data.recipes) { // add null check here\n  //           // Filter the recipes to show only those created by the logged-in user\n\n  //           const filtered = data.recipes.filter(recipe => recipe.user_id === userId);\n  //           // console.log(filteredRecipes)\n  //           setRecipes(filtered);\n  //           console.log(data.recipes)\n\n  //         }\n  //       // const userId = data.data.id;\n  //       // const filteredRecipes = data.recipes.filter(recipe => recipe.user_id === userId);\n  //       // setRecipes(filteredRecipes);\n  //   })\n  //   //   if (data && data.data && Array.isArray(data.data)) {\n  //   //     // Filter the recipes to show only those created by the logged-in user\n  //   //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //   //     setRecipes(filteredRecipes);\n  //   //   } else {\n  //   //     // Handle errors\n  //   //     console.error('Error: Invalid response format');\n  //   //   }\n  //   // })\n  //   // .catch(error => {\n  //   //   console.error('Error fetching recipes:', error);\n  //   // });\n  //       //   .then(response => response.json())\n  //       //   .then(data => {\n  //       //     // Filter the recipes to show only those created by the logged-in user\n  //       //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //       //     setRecipes(filteredRecipes);\n  //       //   });\n  //   // const fetchRecipes = async () => {\n  //   //   try {\n  //   //     const response = await fetch('/me');\n  //   //     let data = await response.json();\n  //   //     // console.log(recipes);\n  //   //     setRecipes(data.data);\n  //   //     console.log(recipes);\n  //   //     setIsLoading(false)\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //     setIsLoading(false)\n  //   //   }\n  //   // };\n\n  //   fetch('/categories')\n  //   .then(response => response.json())\n  //   .then(data => setCategories(data.data));\n  //   // fetchRecipes();\n  // }, []);\n\n  //   useEffect(() => {\n  //     // Fetch recipes from the backend API\n  //     fetch('/recipes')\n  //       .then(response => response.json())\n  //       .then(data => {\n  //         // Filter the recipes to show only those created by the logged-in user\n  //         const filteredRecipes = data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //         setRecipes(filteredRecipes);\n  //       });\n  //       fetch('/categories')\n  //       .then(response => response.json())\n  //       .then(data => setCategories(data.data));\n  //       fetchRecipes();\n  //     }, []);\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    striped: true,\n    bordered: true,\n    hover: true,\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"#\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Instructions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Ingredients\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Prep Time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: Array.isArray(recipes) && recipes.map((recipe, index) => {\n        console.log(recipe, index);\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.instructions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.ingredients.split(\",\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: recipe.prep_time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"me-2\",\n              onClick: () => handleDelete(recipe.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 19\n          }, this)]\n        }, recipe.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n_s(ViewRecipes, \"/Wq6a7uzi31EF4WeAb9SQkFsxDU=\");\n_c = ViewRecipes;\nexport default ViewRecipes;\nvar _c;\n$RefreshReg$(_c, \"ViewRecipes\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","Category","jsxDEV","_jsxDEV","ViewRecipes","_s","recipes","setRecipes","isLoading","setIsLoading","categories","setCategories","userId","sessionStorage","getItem","fetchRecipes","response","fetch","data","json","console","log","error","then","handleDelete","recipeId","method","ok","filter","recipe","id","Error","striped","bordered","hover","children","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","map","index","title","instructions","ingredients","split","prep_time","variant","className","onClick","_c","$RefreshReg$"],"sources":["/home/saviour/f5/phase-4-final-project/src/Recipe/MyRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Table, Button } from 'react-bootstrap';\nimport Category from '../components/Category';\nfunction ViewRecipes() {\n  const [recipes, setRecipes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [categories, setCategories] = useState([]);\n\n  const userId = sessionStorage.getItem('userId');\n\n  useEffect(() => {\n    const fetchRecipes = async () => {\n      try {\n        const response = await fetch('/me');\n        let data = await response.json();\n        // console.log(recipes);\n        setRecipes(data.recipes);\n        console.log(recipes);\n        setIsLoading(false)\n      } catch (error) {\n        console.log(error);\n        setIsLoading(false)\n      }\n    };\n\n    fetch('/categories')\n    .then(response => response.json())\n    .then(data => setCategories(data.data));\n    fetchRecipes();\n  }, []);\n\n  const handleDelete = async (recipeId) => {\n    try {\n      const response = await fetch(`/recipes/${recipeId}`, {\n        method: 'DELETE',\n      });\n      if (response.ok) {\n        setRecipes(recipes.filter((recipe) => recipe.id !== recipeId));\n      } else {\n        throw new Error('Failed to delete recipe');\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  // useEffect(() => {\n  //   fetch('/me')\n\n  //   .then(response => response.json())\n  //   .then(data => {\n  //       console.log(data.revipes)\n  //       if (data && data.recipes) { // add null check here\n  //           // Filter the recipes to show only those created by the logged-in user\n          \n  //           const filtered = data.recipes.filter(recipe => recipe.user_id === userId);\n  //           // console.log(filteredRecipes)\n  //           setRecipes(filtered);\n  //           console.log(data.recipes)\n            \n  //         }\n  //       // const userId = data.data.id;\n  //       // const filteredRecipes = data.recipes.filter(recipe => recipe.user_id === userId);\n  //       // setRecipes(filteredRecipes);\n  //   })\n  //   //   if (data && data.data && Array.isArray(data.data)) {\n  //   //     // Filter the recipes to show only those created by the logged-in user\n  //   //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //   //     setRecipes(filteredRecipes);\n  //   //   } else {\n  //   //     // Handle errors\n  //   //     console.error('Error: Invalid response format');\n  //   //   }\n  //   // })\n  //   // .catch(error => {\n  //   //   console.error('Error fetching recipes:', error);\n  //   // });\n  //       //   .then(response => response.json())\n  //       //   .then(data => {\n  //       //     // Filter the recipes to show only those created by the logged-in user\n  //       //     const filteredRecipes = data.data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n  //       //     setRecipes(filteredRecipes);\n  //       //   });\n  //   // const fetchRecipes = async () => {\n  //   //   try {\n  //   //     const response = await fetch('/me');\n  //   //     let data = await response.json();\n  //   //     // console.log(recipes);\n  //   //     setRecipes(data.data);\n  //   //     console.log(recipes);\n  //   //     setIsLoading(false)\n  //   //   } catch (error) {\n  //   //     console.log(error);\n  //   //     setIsLoading(false)\n  //   //   }\n  //   // };\n\n  //   fetch('/categories')\n  //   .then(response => response.json())\n  //   .then(data => setCategories(data.data));\n  //   // fetchRecipes();\n  // }, []);\n\n\n\n//   useEffect(() => {\n//     // Fetch recipes from the backend API\n//     fetch('/recipes')\n//       .then(response => response.json())\n//       .then(data => {\n//         // Filter the recipes to show only those created by the logged-in user\n//         const filteredRecipes = data.filter(recipe => recipe.user_id === sessionStorage.getItem('userId'));\n//         setRecipes(filteredRecipes);\n//       });\n//       fetch('/categories')\n//       .then(response => response.json())\n//       .then(data => setCategories(data.data));\n//       fetchRecipes();\n//     }, []);\n//   }, []);\n \n  return (\n    <Table striped bordered hover>\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Title</th>\n        <th>Instructions</th>\n        <th>Ingredients</th>\n        <th>Prep Time</th>\n        {/* <th>Category</th> */}\n        <th>Actions</th>\n      </tr>\n    </thead>\n    <tbody>\n      {\n      Array.isArray(recipes) && recipes.map((recipe, index) => {\n        console.log(recipe, index);\n        return (\n                  <tr key={recipe.id}>\n                  <td>{index + 1}</td>\n                  <td>{recipe.title}</td>\n                  <td>{recipe.instructions}</td>\n                  <td>{recipe.ingredients.split(\",\")}</td>\n                  <td>{recipe.prep_time}</td>\n                  {/* <Category category={categories.find(category => category.id === recipes.category_id)} /> */}\n\n                  <td>\n                      <Button\n                        variant=\"danger\"\n                        className=\"me-2\"\n                        onClick={() => handleDelete(recipe.id)}\n                      >\n                        Delete\n                      </Button>\n                      </td>\n                  </tr>\n                            )\n                          }\n                          \n                            \n                        \n                          )}\n      \n    </tbody>\n  </Table>\n  )\n}\nexport default ViewRecipes;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}