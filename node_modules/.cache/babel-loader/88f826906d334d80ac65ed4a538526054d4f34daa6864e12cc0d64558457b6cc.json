{"ast":null,"code":"var _jsxFileName = \"/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/components/signup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col, Alert } from 'react-bootstrap';\n// import './Register.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  // let navigate = useNavigate()\n\n  let [registered, setRegistered] = useState(false);\n  let [email, SetEmail] = useState(\"\");\n  let [password, SetPassword] = useState(\"\");\n  let [username, SetUsername] = useState(\"\");\n  const handleLogin = e => {\n    e.preventDefault();\n    fetch(\"https://meme-generator-backend.onrender.com/auth/register\", {\n      method: \"POST\",\n      crossorigin: true,\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        username,\n        email,\n        password\n      })\n    }).then(response => response.json()).then(data => {\n      // Handle successful login\n\n      console.log(data);\n    }).catch(error => {\n      // Handle login error\n      console.error(error);\n    });\n    setRegistered(true);\n  };\n  // const Signup = ({onLogin}) => {\n  //   const [username, setUsername] = useState(\"\");\n  //   const [email, setEmail] = useState(\"\");\n  //   const [password, setPassword] = useState(\"\");\n  //   const [error, setError] = useState([]);\n\n  //   let handleRegister = async (e) => {\n\n  //     e.preventDefault();\n  //     try {\n  //       const response = await fetch('http://localhost:3000/users', {\n  //         method: \"POST\",\n  //         crossorigin: true,\n  //         mode: \"no-cors\",\n  //         headers: {\n  //           'Content-Type': 'application/json',\n  //         },\n  //         body: JSON.stringify({ \n  //           username, \n  //           email, \n  //           password, \n  //         }),\n  //       })\n  //       if (!response.ok) {\n  //         throw new Error('Error registering user');\n  //       }\n  //       // handle successful registration\n  //     } catch (error) {\n  //       setError(error.message);\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-md-center mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-center mb-4\",\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), \" && \", /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleLogin,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicUsername\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter username\",\n              onChange: event => SetUsername(event.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicEmail\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"email\",\n              placeholder: \"Enter email\",\n              onChange: event => setEmail(event.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"formBasicPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"Password\",\n              onChange: event => setPassword(event.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"REHms3avyTbf+/X9TVDkQPgOFBM=\");\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Form","Button","Container","Row","Col","Alert","jsxDEV","_jsxDEV","Signup","_s","registered","setRegistered","email","SetEmail","password","SetPassword","username","SetUsername","handleLogin","e","preventDefault","fetch","method","crossorigin","mode","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","children","className","xs","md","fileName","_jsxFileName","lineNumber","columnNumber","variant","onSubmit","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","required","setEmail","setPassword","_c","$RefreshReg$"],"sources":["/home/user/Development/code/phase4/phase-4-final-project/phase-4-final-project/src/components/signup.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Form, Button, Container, Row, Col, Alert } from 'react-bootstrap';\n// import './Register.css';\n\nconst Signup = () => {\n\n  // let navigate = useNavigate()\n\n  let [registered, setRegistered] = useState(false);\n\n  let [email, SetEmail] = useState(\"\");\n  let [password, SetPassword] = useState(\"\");\n  let [username, SetUsername] = useState(\"\")\n\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    fetch(\"https://meme-generator-backend.onrender.com/auth/register\", {\n      method: \"POST\",\n      crossorigin: true,\n      mode: \"no-cors\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n\n      body: JSON.stringify({\n       username, email, password,\n      })\n\n    }).then((response) => response.json())\n    .then((data) => {\n      // Handle successful login\n      \n      console.log(data);\n    })\n    .catch((error) => {\n      // Handle login error\n      console.error(error);\n    });\n   setRegistered(true)\n};\n// const Signup = ({onLogin}) => {\n//   const [username, setUsername] = useState(\"\");\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const [error, setError] = useState([]);\n\n\n//   let handleRegister = async (e) => {\n\n//     e.preventDefault();\n//     try {\n//       const response = await fetch('http://localhost:3000/users', {\n//         method: \"POST\",\n//         crossorigin: true,\n//         mode: \"no-cors\",\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ \n//           username, \n//           email, \n//           password, \n//         }),\n//       })\n//       if (!response.ok) {\n//         throw new Error('Error registering user');\n//       }\n//       // handle successful registration\n//     } catch (error) {\n//       setError(error.message);\n//     }\n//   };\n  \n  return (\n    <Container>\n      <Row className=\"justify-content-md-center mt-5\">\n        <Col xs={12} md={6}>\n          <h2 className=\"text-center mb-4\">Register</h2>\n          {} && <Alert variant=\"danger\">{}</Alert>\n          <Form onSubmit={handleLogin}>\n            <Form.Group controlId=\"formBasicUsername\">\n              <Form.Label>Username</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter username\"\n               \n                onChange={ event=> SetUsername(event.target.value)} required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n               \n                onChange={ event => setEmail(event.target.value)} required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n              \n                onChange={ event => setPassword(event.target.value)} required\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Register\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Signup;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}